# 이 워크플로우는 'main' 브랜치에 코드가 푸시될 때마다 실행됩니다.
name: Flutter CI/CD to Github Drive

on:
  push:
    branches: [ master ]
  # 수동 실행(Run workflow 버튼)을 위한 트리거 추가
  workflow_dispatch:

permissions:
  contents: write # 릴리스 생성에 필요한 쓰기 권한 추가

jobs:
  build-and-upload:
    # 워크플로우를 실행할 가상 머신 환경을 지정합니다.
    runs-on: ubuntu-latest

    steps:
    # 1. 소스 코드 체크아웃
    # 리포지토리의 코드를 가상 머신으로 가져옵니다.
    #- name: Checkout code
    #  uses: actions/checkout@v3
    - name: Check out repository
      uses: actions/checkout@v4
      with:
        #repository: octocat/my-private-repo
        repository: innocentree/body_calendar
        #ref: v1.0
        # secrets 에 토큰이 없으면 빌드 실패
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

    # 2. 자바(JDK) 설정
    # Flutter 안드로이드 빌드에 필요한 자바 환경을 설정합니다.
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'

    # 3. Flutter SDK 설정
    # Flutter 개발 환경을 설정합니다.
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable' # stable, beta, dev, master 중 선택

    # 4. Flutter 의존성 패키지 설치
    # pubspec.yaml 파일에 명시된 모든 패키지를 다운로드합니다.
    - name: Flutter clean
      run: flutter clean
    - name: Install dependencies
      run: flutter pub get

    # 5. Flutter 릴리즈 APK 빌드
    # 릴리즈 버전의 APK 파일을 생성합니다. 
    - name: Build release APK
      run: flutter build apk --release
      #run: flutter build apk --debug

    # 6. GitHub Releases에 APK 업로드
    # https://github.com/softprops/action-gh-release
    - name: Create and upload GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # 릴리스 태그: 예) v1.0.0
        tag_name: v1.0.${{ github.run_number }}
        # 릴리스 이름
        name: Release ${{ github.run_number }}
        # 릴리스 설명
        #body: |
        #  This is a new release generated by GitHub Actions.
        #  - New features
        #  - Bug fixes
        body_path: commit_message.txt
        # 업로드할 파일 경로
        files: build/app/outputs/flutter-apk/app-release.apk
        #files: build/app/outputs/flutter-apk/app-debug.apk
        # 릴리스 초안으로 생성
        draft: false
        # 릴리스를 최신 릴리스로 설정
        prerelease: true
        overwrite_files: true
        
